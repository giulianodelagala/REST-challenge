// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Users {
  id        Int       @id @default(autoincrement())
  username  String    @db.VarChar(50)
  email     String    @db.VarChar(50) @unique
  name      String    @db.VarChar(100)
  role      Role      @default(USER)
  password  String    @db.VarChar(255)
  is_email_public   Boolean   @default(true)
  email_verified_at DateTime?
  is_name_public    Boolean   @default(true)
  created_at        DateTime  @default(now())
  updated_at        DateTime? @updatedAt
  posts             Posts[]
  like_post         LikePost[]
  like_comment      LikeComment[]
}

model Posts {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  content     String
  is_published Boolean  @default(false)
  user         Users     @relation(fields: [user_id], references: [id])
  user_id      Int
  comments     Comments[]
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  like         LikePost[]
}

model Comments {
  id          Int      @id @default(autoincrement())
  content     String
  is_published Boolean  @default(false)
  post        Posts     @relation(fields: [post_id], references: [id])
  post_id      Int
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  like        LikeComment[]
}

model LikePost {
  id      Int     @id @default(autoincrement())
  is_like  Boolean
  post    Posts    @relation(fields: [post_id], references: [id])
  post_id  Int
  user    Users    @relation(fields: [user_id], references: [id])
  user_id  Int
  created_at DateTime @default(now())
}

model LikeComment {
  id        Int     @id @default(autoincrement())
  is_like    Boolean
  comment   Comments @relation(fields: [comment_id], references: [id])
  comment_id Int
  user      Users    @relation(fields: [user_id], references: [id])
  user_id    Int
  created_at DateTime @default(now())
}

enum Role {
  USER
  MODERATOR
  ADMIN
}